{"version":3,"sources":["images/michal-kubalczyk-bCNzxvvbF_U-unsplash.jpg","images/patrick-perkins-3wylDrjxH-E-unsplash.jpg","constants/routes.js","constants/history.js","helpers/cookie.js","components/SignOut/index.js","components/Session/queries.js","components/Session/withSession.js","components/Error/index.js","helpers/strings.js","components/Message/MessageCreate/index.js","components/Message/MessageDelete/index.js","components/Loading/index.js","components/Message/Messages/index.js","components/Landing/index.js","components/SignUp/data.units.js","components/SignUp/index.js","components/SignIn/index.js","components/Session/withAuthorization.js","components/Account/index.js","components/Admin/index.js","components/EmailConfirm/index.js","pages/Main/index.js","components/App/index.js","index.js"],"names":["module","exports","LANDING","createBrowserHistory","getCookie","name","parts","window","document","cookie","split","length","pop","shift","deleteCookie","checkTokenExpired","history","expiresAt","TOKEN","accessToken","getAccessToken","decoded","jsonwebtoken","decode","exp","Math","floor","Date","getTime","console","log","push","signOut","client","event","preventDefault","resetStore","SignOutButton","target","onClick","rel","GET_ME","gql","withSession","Component","props","query","data","refetch","session","ErrorMessage","errorMessage","error","className","message","description","replace","type","closable","CREATE_MESSAGE","MessageCreate","state","text","onChange","value","setState","onSubmit","createMessage","a","this","mutation","variables","loading","placeholder","Error","GET_ALL_MESSAGES_WITH_USERS","DELETE_MESSAGE","MessageDelete","id","update","cache","readQuery","writeQuery","messages","edges","filter","node","pageInfo","deleteMessage","Loading","MESSAGE_CREATED","GET_PAGINATED_MESSAGES_WITH_USERS","MoreMessagesButton","limit","fetchMore","children","cursor","endCursor","updateQuery","previousResult","fetchMoreResult","MessageList","subscribeToMoreMessage","subscribeToMore","subscriptionData","messageCreated","map","MessageItem","key","user","username","createdAt","me","Messages","hasNextPage","allUnits","SIGN_UP","SignUpForm","React","useState","setUsername","email","setEmail","password","setPassword","passwordConfirmation","setPasswordConfirmation","contactNo","setContactNo","unitNo","setUnitNo","residencyType","setResidencyType","firstName","setFirstName","lastName","setLastName","dateTurnedOver","setDateTurnedOver","dateOfBirth","setDateOfBirth","handleChangeInput","funcSetter","signUp","then","success","clearState","handleChangeUnitNo","handleChangeResidencyType","handleDateTurnedOverChange","date","_d","handleDateOfBirthChange","isInvalid","role","gutter","sm","md","showSearch","style","width","optionFilterProp","size","filterOption","input","option","toLowerCase","indexOf","unit","Option","with","Group","defaultValue","buttonStyle","Button","MonthPicker","renderExtraFooter","format","disabled","_has","SignUpLink","Link","to","SignInLink","isEmailConfirm","withRouter","src","Backdrop","responsive","span","SIGN_IN","SignInForm","useCookies","setCookie","login","setLogin","handleLogin","handlePassword","signIn","expires","moment","add","token","path","routes","withAuthorization","conditionFn","networkStatus","Redirect","EMAIL_CONFIRM","idParam","location","pathname","_get","Header","Layout","Content","Footer","Sider","SubMenu","Menu","menu","Item","SignOut","SiderDemo","collapsed","setCollapsed","useEffect","minHeight","collapsible","onCollapse","theme","defaultSelectedKeys","mode","title","background","padding","overlay","href","margin","textAlign","Router","Fragment","Route","exact","component","Main","SignUp","SignIn","EmailConfirm","Account","Admin","httpLink","HttpLink","uri","wsLink","WebSocketLink","options","reconnect","terminatingLink","getMainDefinition","kind","operation","authLink","ApolloLink","forward","setContext","headers","errorLink","onError","graphQLErrors","networkError","forEach","locations","statusCode","link","from","InMemoryCache","ApolloClient","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.02c948ce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/michal-kubalczyk-bCNzxvvbF_U-unsplash.446d108e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/patrick-perkins-3wylDrjxH-E-unsplash.4e45c38a.jpg\";","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const EMAIL_CONFIRM = '/email_confirm/:id';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","import jsonwebtoken from 'jsonwebtoken';\nimport * as routes from '../constants/routes';\n\nexport const getCookie = name => {\n  const value = `; ${window.document.cookie}`;\n  const parts = value.split(`; ${name}=`);\n  if (parts.length === 2) {\n    const result = parts\n      .pop()\n      .split(';')\n      .shift();\n    return result;\n  }\n  return '';\n};\n\nexport const deleteCookie = name => {\n  window.document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n};\n\nexport const isJwtTokenExpired = expiresAt => {\n  const currentTime = Math.floor(new Date().getTime() / 1000);\n  const isexp = currentTime > expiresAt;\n  if (isexp) {\n    return true;\n  }\n  return false;\n};\n\nexport const getAccessToken = () => {\n  const accessToken = getCookie('token');\n  if (accessToken) {\n    return accessToken;\n  }\n  return null;\n};\n\nexport const checkTokenExpired = history => {\n  const TOKEN = getAccessToken();\n  if (TOKEN) {\n    const decoded = jsonwebtoken.decode(TOKEN);\n    const isJwtExpired = isJwtTokenExpired(decoded.exp);\n    if (isJwtExpired) {\n      console.log('expired');\n      deleteCookie('token');\n      // cookieBroadcastMessage(CLEAR_COOKIE);\n      // checkTenantUserId();\n      // clearAndRedirect();\n    }\n  } else {\n    console.log('no token');\n    // window.location = '/signin';\n\n    history.push(routes.SIGN_IN);\n    // cookieBroadcastMessage(CLEAR_COOKIE);\n    // clearAndRedirect();\n  }\n};\n","import React from 'react';\nimport { ApolloConsumer } from 'react-apollo';\n\nimport * as routes from '../../constants/routes';\nimport history from '../../constants/history';\n\nimport { deleteCookie } from '../../helpers/cookie';\n\nfunction SignOutButton() {\n  return (\n    <ApolloConsumer>\n      {client => (\n        <a target=\"_blank\" onClick={signOut(client)} rel=\"noopener noreferrer\">\n          Sign Out\n        </a>\n      )}\n    </ApolloConsumer>\n  );\n}\n\nconst signOut = client => event => {\n  event.preventDefault();\n  deleteCookie('token');\n  client.resetStore();\n  history.push(routes.SIGN_IN);\n};\n\nexport { signOut };\n\nexport default SignOutButton;\n","import gql from 'graphql-tag';\n\nexport const GET_ME = gql`\n  {\n    me {\n      id\n      username\n      email\n      role\n    }\n  }\n`;\n","import React from 'react';\nimport { Query } from 'react-apollo';\nimport { GET_ME } from './queries';\n\nconst withSession = Component => props => (\n  <Query query={GET_ME}>\n    {({ data, refetch }) => (\n      <Component {...props} session={data} refetch={refetch} />\n    )}\n  </Query>\n);\n\nexport default withSession;\n","import React from 'react';\nimport Alert from 'antd/lib/alert';\nimport { cleanErrorMessage } from '../../helpers/strings';\n\nconst ErrorMessage = ({ error }) => (\n  <Alert\n    className=\"bottom-20\"\n    message=\"Error Message\"\n    description={cleanErrorMessage(error.message)}\n    type=\"error\"\n    closable\n  />\n);\n\nexport default ErrorMessage;\n","export const cleanErrorMessage = errorMessage => {\n  return errorMessage.replace('GraphQL error: ', '');\n};\n","import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\n\nimport ErrorMessage from '../../Error';\n\nconst CREATE_MESSAGE = gql`\n  mutation($text: String!) {\n    createMessage(text: $text) {\n      id\n      text\n      createdAt\n      user {\n        id\n        username\n      }\n    }\n  }\n`;\n\nclass MessageCreate extends Component {\n  state = {\n    text: '',\n  };\n\n  onChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  onSubmit = async (event, createMessage) => {\n    event.preventDefault();\n\n    try {\n      await createMessage();\n      this.setState({ text: '' });\n    } catch (error) {}\n  };\n\n  render() {\n    const { text } = this.state;\n\n    return (\n      <Mutation\n        mutation={CREATE_MESSAGE}\n        variables={{ text }}\n        // Not used anymore because of Subscription\n\n        // update={(cache, { data: { createMessage } }) => {\n        //   const data = cache.readQuery({\n        //     query: GET_ALL_MESSAGES_WITH_USERS,\n        //   });\n\n        //   cache.writeQuery({\n        //     query: GET_ALL_MESSAGES_WITH_USERS,\n        //     data: {\n        //       ...data,\n        //       messages: {\n        //         ...data.messages,\n        //         edges: [createMessage, ...data.messages.edges],\n        //         pageInfo: data.messages.pageInfo,\n        //       },\n        //     },\n        //   });\n        // }}\n      >\n        {(createMessage, { data, loading, error }) => (\n          <form\n            onSubmit={event => this.onSubmit(event, createMessage)}\n          >\n            <textarea\n              name=\"text\"\n              value={text}\n              onChange={this.onChange}\n              type=\"text\"\n              placeholder=\"Your message ...\"\n            />\n            <button type=\"submit\">Send</button>\n\n            {error && <ErrorMessage error={error} />}\n          </form>\n        )}\n      </Mutation>\n    );\n  }\n}\n\nexport default MessageCreate;\n","import React from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\n\nconst GET_ALL_MESSAGES_WITH_USERS = gql`\n  query {\n    messages(order: \"DESC\") @connection(key: \"MessagesConnection\") {\n      edges {\n        id\n        text\n        createdAt\n        user {\n          id\n          username\n        }\n      }\n      pageInfo {\n        hasNextPage\n      }\n    }\n  }\n`;\n\nconst DELETE_MESSAGE = gql`\n  mutation($id: ID!) {\n    deleteMessage(id: $id)\n  }\n`;\n\nconst MessageDelete = ({ message }) => (\n  <Mutation\n    mutation={DELETE_MESSAGE}\n    variables={{ id: message.id }}\n    update={cache => {\n      const data = cache.readQuery({\n        query: GET_ALL_MESSAGES_WITH_USERS,\n      });\n\n      cache.writeQuery({\n        query: GET_ALL_MESSAGES_WITH_USERS,\n        data: {\n          ...data,\n          messages: {\n            ...data.messages,\n            edges: data.messages.edges.filter(\n              node => node.id !== message.id,\n            ),\n            pageInfo: data.messages.pageInfo,\n          },\n        },\n      });\n    }}\n  >\n    {(deleteMessage, { data, loading, error }) => (\n      <button type=\"button\" onClick={deleteMessage}>\n        Delete\n      </button>\n    )}\n  </Mutation>\n);\n\nexport default MessageDelete;\n","import React from 'react';\n\nconst Loading = () => <div>Loading ...</div>;\n\nexport default Loading;\n","import React, { Component, Fragment } from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\n\nimport MessageDelete from '../MessageDelete';\nimport Loading from '../../Loading';\nimport withSession from '../../Session/withSession';\n\nconst MESSAGE_CREATED = gql`\n  subscription {\n    messageCreated {\n      message {\n        id\n        text\n        createdAt\n        user {\n          id\n          username\n        }\n      }\n    }\n  }\n`;\n\nconst GET_PAGINATED_MESSAGES_WITH_USERS = gql`\n  query($cursor: String, $limit: Int!) {\n    messages(cursor: $cursor, limit: $limit)\n      @connection(key: \"MessagesConnection\") {\n      edges {\n        id\n        text\n        createdAt\n        user {\n          id\n          username\n        }\n      }\n      pageInfo {\n        hasNextPage\n        endCursor\n      }\n    }\n  }\n`;\n\nconst Messages = ({ limit }) => (\n  <Query\n    query={GET_PAGINATED_MESSAGES_WITH_USERS}\n    variables={{ limit }}\n  >\n    {({ data, loading, error, fetchMore, subscribeToMore }) => {\n      if (!data) {\n        return (\n          <div>\n            There are no messages yet ... Try to create one by\n            yourself.\n          </div>\n        );\n      }\n\n      const { messages } = data;\n\n      if (loading || !messages) {\n        return <Loading />;\n      }\n\n      const { edges, pageInfo } = messages;\n\n      return (\n        <Fragment>\n          <MessageList\n            messages={edges}\n            subscribeToMore={subscribeToMore}\n          />\n\n          {pageInfo.hasNextPage && (\n            <MoreMessagesButton\n              limit={limit}\n              pageInfo={pageInfo}\n              fetchMore={fetchMore}\n            >\n              More\n            </MoreMessagesButton>\n          )}\n        </Fragment>\n      );\n    }}\n  </Query>\n);\n\nconst MoreMessagesButton = ({\n  limit,\n  pageInfo,\n  fetchMore,\n  children,\n}) => (\n  <button\n    type=\"button\"\n    onClick={() =>\n      fetchMore({\n        variables: {\n          cursor: pageInfo.endCursor,\n          limit,\n        },\n        updateQuery: (previousResult, { fetchMoreResult }) => {\n          if (!fetchMoreResult) {\n            return previousResult;\n          }\n\n          return {\n            messages: {\n              ...fetchMoreResult.messages,\n              edges: [\n                ...previousResult.messages.edges,\n                ...fetchMoreResult.messages.edges,\n              ],\n            },\n          };\n        },\n      })\n    }\n  >\n    {children}\n  </button>\n);\n\nclass MessageList extends Component {\n  subscribeToMoreMessage = () => {\n    this.props.subscribeToMore({\n      document: MESSAGE_CREATED,\n      updateQuery: (previousResult, { subscriptionData }) => {\n        if (!subscriptionData.data) {\n          return previousResult;\n        }\n\n        const { messageCreated } = subscriptionData.data;\n        return {\n          ...previousResult,\n          messages: {\n            ...previousResult.messages,\n            edges: [\n              messageCreated.message,\n              ...previousResult.messages.edges,\n            ],\n          },\n        };\n      },\n    });\n  };\n\n  componentDidMount() {\n    this.subscribeToMoreMessage();\n  }\n\n  render() {\n    const { messages } = this.props;\n\n    return messages.map(message => (\n      <MessageItem key={message.id} message={message} />\n    ));\n  }\n}\n\nconst MessageItemBase = ({ message, session }) => (\n  <div>\n    <h3>{message.user.username}</h3>\n    <small>{message.createdAt}</small>\n    <p>{message.text}</p>\n\n    {session && session.me && message.user.id === session.me.id && (\n      <MessageDelete message={message} />\n    )}\n  </div>\n);\n\nconst MessageItem = withSession(MessageItemBase);\n\nexport default Messages;\n","import React from 'react';\n\nimport withSession from '../Session/withSession';\n\nimport { MessageCreate, Messages } from '../Message';\n\nconst Landing = ({ session }) => (\n  <div>\n    <h2>Landing Page</h2>\n\n    {session && session.me && <MessageCreate />}\n    <Messages limit={2} />\n  </div>\n);\n\nexport default withSession(Landing);\n","export const allUnits = [\n  '5-1-1',\n  '5-1-2',\n  '5-1-3',\n  '5-1-4',\n  '5-1-5',\n  '5-1-6',\n  '5-1-7',\n  '5-1-8',\n  '5-1-9',\n  '5-1-10',\n  '5-1-11',\n  '5-1-12',\n  '5-1-14',\n  '5-1-15',\n  '5-1-16',\n  '5-1-17',\n  '5-1-18',\n  '5-1-19',\n  '5-1-20',\n  '5-1-22',\n  '5-1-24',\n  '5-1-25',\n  '5-1-26',\n  '5-1-27',\n  '5-1-28',\n  '5-1-29',\n  '5-1-30',\n  '5-1-32',\n  '5-1-33',\n  '5-1-34',\n  '5-2-1',\n  '5-2-2',\n  '5-2-3',\n  '5-2-4',\n  '5-2-5',\n  '5-2-6',\n  '5-2-7',\n  '5-2-8',\n  '5-2-9',\n  '5-2-10',\n  '5-3-3',\n  '5-3-4',\n  '5-3-5',\n  '5-3-6',\n  '5-3-7',\n  '5-3-8',\n  '5-3-9',\n  '5-3-10',\n  '5-3-12',\n  '5-3-13',\n  '5-3-14',\n  '5-3-15',\n  '5-3-16',\n  '5-3-17',\n  '5-3-18',\n  '5-3-19',\n  '5-3-20',\n  '5-3-21',\n];\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\n\nimport _has from 'lodash/has';\nimport Row from 'antd/lib/row';\nimport Col from 'antd/lib/col';\nimport Button from 'antd/lib/button';\nimport Alert from 'antd/lib/alert';\nimport Radio from 'antd/lib/radio';\nimport Select from 'antd/lib/select';\nimport Divider from 'antd/lib/divider';\nimport DatePicker from 'antd/lib/date-picker';\nimport message from 'antd/lib/message';\n\nimport * as routes from '../../constants/routes';\nimport ErrorMessage from '../Error';\nimport Backdrop from '../../images/michal-kubalczyk-bCNzxvvbF_U-unsplash.jpg';\nimport { allUnits } from './data.units';\n\nconst SIGN_UP = gql`\n  mutation(\n    $username: String!\n    $email: String!\n    $password: String!\n    $role: String!\n    $contactNo: String!\n    $unitNo: String!\n    $residencyType: String!\n    $firstName: String!\n    $lastName: String!\n    $dateTurnedOver: Date\n    $dateOfBirth: Date!\n  ) {\n    signUp(\n      username: $username\n      email: $email\n      password: $password\n      role: $role\n      contactNo: $contactNo\n      unitNo: $unitNo\n      residencyType: $residencyType\n      firstName: $firstName\n      lastName: $lastName\n      dateTurnedOver: $dateTurnedOver\n      dateOfBirth: $dateOfBirth\n    ) {\n      token\n      message\n    }\n  }\n`;\n\nconst SignUpPage = ({ history, refetch }) => (\n  <Row>\n    <Col sm={24} md={8}>\n      <div>\n        <img src={Backdrop} className=\"backdrop\" />\n      </div>\n    </Col>\n    <Col sm={24} md={16}>\n      <SignUpForm history={history} refetch={refetch} />\n    </Col>\n  </Row>\n);\n\nfunction SignUpForm(props) {\n  const [username, setUsername] = React.useState('');\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const [passwordConfirmation, setPasswordConfirmation] = React.useState('');\n  const [contactNo, setContactNo] = React.useState('');\n  const [unitNo, setUnitNo] = React.useState('');\n  const [residencyType, setResidencyType] = React.useState('');\n  const [firstName, setFirstName] = React.useState('');\n  const [lastName, setLastName] = React.useState('');\n  const [dateTurnedOver, setDateTurnedOver] = React.useState('');\n  const [dateOfBirth, setDateOfBirth] = React.useState('');\n\n  const handleChangeInput = funcSetter => event => {\n    const { value } = event.target;\n    funcSetter(value);\n  };\n\n  const onSubmit = signUp => event => {\n    event.preventDefault();\n    signUp().then(async ({ data }) => {\n      await props.refetch();\n      message.success(data.signUp.message);\n      clearState();\n    });\n  };\n\n  const handleChangeUnitNo = value => {\n    setUnitNo(value);\n  };\n\n  const handleChangeResidencyType = event => {\n    setResidencyType(event.target.value);\n  };\n\n  const handleDateTurnedOverChange = date => {\n    if (date) {\n      setDateTurnedOver(date._d);\n    }\n  };\n\n  const handleDateOfBirthChange = date => {\n    if (date) {\n      setDateOfBirth(date._d);\n    }\n  };\n\n  const clearState = () => {\n    setUsername('');\n    setEmail('');\n    setPassword('');\n    setPasswordConfirmation('');\n    setContactNo('');\n    setUnitNo('');\n    setResidencyType('');\n    setFirstName('');\n    setLastName('');\n    setDateTurnedOver('');\n    setDateOfBirth('');\n  };\n\n  const isInvalid =\n    password !== passwordConfirmation ||\n    password === '' ||\n    email === '' ||\n    username === '' ||\n    contactNo === '' ||\n    unitNo === '' ||\n    residencyType === '' ||\n    firstName === '' ||\n    lastName === '' ||\n    dateTurnedOver === '' ||\n    dateOfBirth === '';\n\n  return (\n    <Mutation\n      mutation={SIGN_UP}\n      variables={{\n        username,\n        email,\n        password,\n        role: 'standard',\n        contactNo,\n        unitNo,\n        residencyType,\n        firstName,\n        lastName,\n        dateTurnedOver,\n        dateOfBirth,\n      }}\n    >\n      {(signUp, { data, loading, error }) => (\n        <form className=\"signup-form\">\n          <h3>Register</h3>\n          <Row gutter={30}>\n            <Col sm={24} md={12}>\n              <input\n                className=\"ant-input\"\n                name=\"username\"\n                value={username}\n                onChange={handleChangeInput(setUsername)}\n                type=\"text\"\n                placeholder=\"User Name\"\n              />\n              <input\n                className=\"ant-input\"\n                name=\"email\"\n                value={email}\n                onChange={handleChangeInput(setEmail)}\n                type=\"email\"\n                placeholder=\"Email Address\"\n              />\n              <input\n                className=\"ant-input\"\n                name=\"password\"\n                value={password}\n                onChange={handleChangeInput(setPassword)}\n                type=\"password\"\n                placeholder=\"Password\"\n              />\n              <input\n                className=\"ant-input\"\n                name=\"passwordConfirmation\"\n                value={passwordConfirmation}\n                onChange={handleChangeInput(setPasswordConfirmation)}\n                type=\"password\"\n                placeholder=\"Confirm Password\"\n              />\n              <Select\n                className=\"bottom-20\"\n                showSearch\n                style={{ width: '100%' }}\n                placeholder=\"Select a Unit No.\"\n                optionFilterProp=\"children\"\n                onChange={handleChangeUnitNo}\n                size=\"large\"\n                filterOption={(input, option) =>\n                  option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {allUnits.map(unit => {\n                  return (\n                    <Select.Option key={unit} value={unit}>\n                      {unit}\n                    </Select.Option>\n                  );\n                })}\n              </Select>\n            </Col>\n            <Col sm={24} md={12}>\n              <input\n                className=\"ant-input\"\n                name=\"firstName\"\n                value={firstName}\n                onChange={handleChangeInput(setFirstName)}\n                type=\"text\"\n                placeholder=\"First Name\"\n              />\n              <input\n                className=\"ant-input\"\n                name=\"lastName\"\n                value={lastName}\n                onChange={handleChangeInput(setLastName)}\n                type=\"text\"\n                placeholder=\"Last Name\"\n              />\n              <input\n                className=\"ant-input\"\n                name=\"contactNo\"\n                value={contactNo}\n                onChange={handleChangeInput(setContactNo)}\n                type=\"text\"\n                placeholder=\"Mobile or Landline\"\n              />\n              <DatePicker\n                className=\"bottom-20\"\n                onChange={handleDateOfBirthChange}\n                size=\"large\"\n                style={{ with: '100%' }}\n                placeholder=\"Date of Birth\"\n              />\n              <h5>Residency Type</h5>\n              <Radio.Group\n                className=\"bottom-20\"\n                size=\"large\"\n                defaultValue=\"resident\"\n                value={residencyType}\n                buttonStyle=\"solid\"\n                onChange={handleChangeResidencyType}\n              >\n                <Radio.Button value=\"resident\">Resident</Radio.Button>\n                <Radio.Button value=\"owner\">Owner</Radio.Button>\n                <Radio.Button value=\"lesse\">Lesse</Radio.Button>\n              </Radio.Group>\n\n              {residencyType === 'owner' && (\n                <div>\n                  <h5>Date Turned Over</h5>\n                  <DatePicker.MonthPicker\n                    size=\"large\"\n                    style={{ with: '100%' }}\n                    renderExtraFooter={() => 'Select Month & Year Turned Over'}\n                    placeholder=\"Turned Over\"\n                    format=\"DD-MM-YYYY\"\n                    onChange={handleDateTurnedOverChange}\n                  />\n                </div>\n              )}\n            </Col>\n          </Row>\n\n          <Divider />\n\n          <Button\n            disabled={isInvalid || loading}\n            className=\"bottom-20\"\n            type=\"submit\"\n            onClick={onSubmit(signUp)}\n          >\n            Create an account\n          </Button>\n\n          {error && <ErrorMessage error={error} />}\n          {_has(data, 'signUp.message') && (\n            <Alert\n              className=\"bottom-20\"\n              message=\"Success Message\"\n              description={data.signUp.message}\n              type=\"success\"\n              closable\n            />\n          )}\n          <SignInLink />\n        </form>\n      )}\n    </Mutation>\n  );\n}\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={routes.SIGN_UP}>Register</Link>\n  </p>\n);\n\nconst SignInLink = ({ isEmailConfirm }) => (\n  <p>\n    {isEmailConfirm ? 'You can now use your credentials, Please' : 'Already have an account?'}{' '}\n    <Link to={routes.SIGN_IN}>Sign In</Link>\n  </p>\n);\n\nexport default withRouter(SignUpPage);\n\nexport { SignUpForm, SignUpLink, SignInLink };\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport moment from 'moment';\nimport { useCookies } from 'react-cookie';\nimport Row from 'antd/lib/row';\nimport Col from 'antd/lib/col';\nimport Divider from 'antd/lib/divider';\n\nimport { SignUpLink } from '../SignUp';\nimport * as routes from '../../constants/routes';\nimport ErrorMessage from '../Error';\nimport Backdrop from '../../images/patrick-perkins-3wylDrjxH-E-unsplash.jpg';\n\nconst responsive = {\n  sm: {\n    span: 24,\n  },\n  md: { span: 12 },\n};\n\nconst SIGN_IN = gql`\n  mutation($login: String!, $password: String!) {\n    signIn(login: $login, password: $password) {\n      token\n      message\n    }\n  }\n`;\n\nconst SignInPage = ({ history, refetch }) => (\n  <Row>\n    <Col {...responsive}>\n      <SignInForm history={history} refetch={refetch} />\n    </Col>\n    <Col {...responsive}>\n      <div>\n        <img src={Backdrop} className=\"backdrop\" />\n      </div>\n    </Col>\n  </Row>\n);\n\nfunction SignInForm(props) {\n  const [_, setCookie] = useCookies(['token']);\n  const [login, setLogin] = React.useState('');\n  const [password, setPassword] = React.useState('');\n\n  const handleLogin = event => {\n    const { value } = event.target;\n    setLogin(value);\n  };\n\n  const handlePassword = event => {\n    const { value } = event.target;\n    setPassword(value);\n  };\n\n  const onSubmit = signIn => event => {\n    const expires = moment().add(1, 'd');\n    signIn().then(async ({ data }) => {\n      setCookie('token', data.signIn.token, {\n        path: '/',\n        expires: expires._d,\n      });\n      setLogin('');\n      setPassword('');\n      await props.refetch();\n      props.history.push(routes.LANDING);\n    });\n\n    event.preventDefault();\n  };\n\n  const isInvalid = password === '' || login === '';\n\n  return (\n    <Mutation mutation={SIGN_IN} variables={{ login, password }}>\n      {(signIn, { data, loading, error }) => (\n        <form className=\"login-form\" onSubmit={onSubmit(signIn)}>\n          <h3>Sign In</h3>\n          <input\n            className=\"ant-input\"\n            name=\"login\"\n            value={login}\n            onChange={handleLogin}\n            type=\"text\"\n            placeholder=\"Email or Username\"\n          />\n          <input\n            className=\"ant-input\"\n            name=\"password\"\n            value={password}\n            onChange={handlePassword}\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n          <Divider />\n          <button className=\"ant-btn bottom-20\" disabled={isInvalid || loading} type=\"submit\">\n            Sign In\n          </button>\n\n          {error && <ErrorMessage error={error} />}\n          <SignUpLink />\n        </form>\n      )}\n    </Mutation>\n  );\n}\n\nexport default withRouter(SignInPage);\n\nexport { SignInForm };\n","import React from 'react';\nimport { Query } from 'react-apollo';\nimport { Redirect } from 'react-router-dom';\n\nimport * as routes from '../../constants/routes';\nimport { GET_ME } from './queries';\n\nconst withAuthorization = conditionFn => Component => props => (\n  <Query query={GET_ME}>\n    {({ data, networkStatus }) => {\n      if (networkStatus < 7) {\n        return null;\n      }\n\n      return conditionFn(data) ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to={routes.SIGN_IN} />\n      );\n    }}\n  </Query>\n);\n\nexport default withAuthorization;\n","import React from 'react';\n\nimport withAuthorization from '../Session/withAuthorization';\n\nconst AccountPage = () => (\n  <div>\n    <h1>Account Page</h1>\n  </div>\n);\n\nexport default withAuthorization(session => session && session.me)(\n  AccountPage,\n);\n","import React from 'react';\n\nimport withAuthorization from '../Session/withAuthorization';\n\nconst AdminPage = () => (\n  <div>\n    <h1>Admin Page</h1>\n  </div>\n);\n\nexport default withAuthorization(\n  session => session && session.me && session.me.role === 'ADMIN',\n)(AdminPage);\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport _get from 'lodash/get';\n\nimport { SignInLink } from '../SignUp';\nimport ErrorMessage from '../Error';\n\nconst EMAIL_CONFIRM = gql`\n  query($id: ID!) {\n    emailConfirm(id: $id)\n  }\n`;\n\nfunction SignInPage() {\n  const idParam = window.location.pathname.replace('/email_confirm/', '');\n\n  return (\n    <Query query={EMAIL_CONFIRM} variables={{ id: idParam }}>\n      {({ data, loading, error }) => {\n        return (\n          <div className=\"email-confirm-message\">\n            {error && <ErrorMessage error={error} />}\n            <h1>{_get(data, 'emailConfirm')}</h1>\n            <SignInLink isEmailConfirm />\n          </div>\n        );\n      }}\n    </Query>\n  );\n}\n\nexport default withRouter(SignInPage);\n","import React from 'react';\nimport { Layout, Menu, Breadcrumb, Icon, Dropdown } from 'antd';\nimport { checkTokenExpired } from '../../helpers/cookie';\n\nimport history from '../../constants/history';\nimport SignOut from '../../components/SignOut';\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\n\nconst menu = (\n  <Menu>\n    <Menu.Item key=\"signout\">\n      <SignOut />\n    </Menu.Item>\n  </Menu>\n);\n\nfunction SiderDemo() {\n  const [collapsed, setCollapsed] = React.useState(false);\n\n  React.useEffect(() => {\n    checkTokenExpired(history);\n  }, []);\n\n  const onCollapse = collapsed => {\n    setCollapsed(collapsed);\n  };\n\n  return (\n    <Layout style={{ minHeight: '100vh' }}>\n      <Sider collapsible collapsed={collapsed} onCollapse={onCollapse}>\n        <div className=\"logo\" />\n        <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\n          <Menu.Item key=\"1\">\n            <Icon type=\"pie-chart\" />\n            <span>Option 1</span>\n          </Menu.Item>\n          <Menu.Item key=\"2\">\n            <Icon type=\"desktop\" />\n            <span>Option 2</span>\n          </Menu.Item>\n          <SubMenu\n            key=\"sub1\"\n            title={\n              <span>\n                <Icon type=\"user\" />\n                <span>User</span>\n              </span>\n            }\n          >\n            <Menu.Item key=\"3\">Tom</Menu.Item>\n            <Menu.Item key=\"4\">Bill</Menu.Item>\n            <Menu.Item key=\"5\">Alex</Menu.Item>\n          </SubMenu>\n          <SubMenu\n            key=\"sub2\"\n            title={\n              <span>\n                <Icon type=\"team\" />\n                <span>Team</span>\n              </span>\n            }\n          >\n            <Menu.Item key=\"6\">Team 1</Menu.Item>\n            <Menu.Item key=\"8\">Team 2</Menu.Item>\n          </SubMenu>\n          <Menu.Item key=\"9\">\n            <Icon type=\"file\" />\n            <span>File</span>\n          </Menu.Item>\n        </Menu>\n      </Sider>\n      <Layout>\n        <Header style={{ background: '#fff', padding: 0 }}>\n          <Dropdown overlay={menu}>\n            <a className=\"ant-dropdown-link account\" href=\"#\">\n              Account <Icon type=\"down\" />\n            </a>\n          </Dropdown>\n        </Header>\n        <Content style={{ margin: '0 16px' }}>\n          <Breadcrumb style={{ margin: '16px 0' }}>\n            <Breadcrumb.Item>User</Breadcrumb.Item>\n            <Breadcrumb.Item>Bill</Breadcrumb.Item>\n          </Breadcrumb>\n          <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>Bill is a cat.</div>\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>by Nenjotsu</Footer>\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default SiderDemo;\n","import React from 'react';\nimport { Router, Route } from 'react-router-dom';\n\nimport Navigation from '../Navigation';\nimport LandingPage from '../Landing';\nimport SignUpPage from '../SignUp';\nimport SignInPage from '../SignIn';\nimport AccountPage from '../Account';\nimport AdminPage from '../Admin';\nimport EmailConfirmPage from '../EmailConfirm';\nimport withSession from '../Session/withSession';\n\nimport MainPage from '../../pages/Main';\n\nimport * as routes from '../../constants/routes';\nimport history from '../../constants/history';\nimport '../../css/overwrite.css';\n\nconst App = ({ session, refetch }) => (\n  <Router history={history}>\n    <React.Fragment>\n      <Route exact path={routes.LANDING} component={() => <MainPage />} />\n      <Route exact path={routes.SIGN_UP} component={() => <SignUpPage refetch={refetch} />} />\n      <Route exact path={routes.SIGN_IN} component={() => <SignInPage refetch={refetch} />} />\n      <Route\n        exact\n        path={routes.EMAIL_CONFIRM}\n        component={() => <EmailConfirmPage refetch={refetch} />}\n      />\n      <Route exact path={routes.ACCOUNT} component={() => <AccountPage />} />\n      <Route exact path={routes.ADMIN} component={() => <AdminPage />} />\n    </React.Fragment>\n  </Router>\n);\n\nexport default withSession(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ApolloProvider } from 'react-apollo';\nimport { ApolloClient } from 'apollo-client';\nimport { getMainDefinition } from 'apollo-utilities';\nimport { ApolloLink, split } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\nimport { WebSocketLink } from 'apollo-link-ws';\nimport { onError } from 'apollo-link-error';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { CookiesProvider } from 'react-cookie';\n\nimport App from './components/App';\nimport { signOut } from './components/SignOut';\nimport { getCookie } from './helpers/cookie';\n\nimport 'antd/dist/antd.css';\n\nconst domain = process.env.NODE_ENV === 'production' ? 'nenjovalente.com' : 'localhost';\n// const secure = process.env.NODE_ENV === 'production' ? 's' : '';\n\nconst httpLink = new HttpLink({\n  uri: `http://${domain}:8000/graphql`,\n});\n\nconst wsLink = new WebSocketLink({\n  uri: `ws://${domain}:8000/graphql`,\n  options: {\n    reconnect: true,\n  },\n});\n\nconst terminatingLink = split(\n  ({ query }) => {\n    const { kind, operation } = getMainDefinition(query);\n    return kind === 'OperationDefinition' && operation === 'subscription';\n  },\n  wsLink,\n  httpLink,\n);\n\nconst authLink = new ApolloLink((operation, forward) => {\n  operation.setContext(({ headers = {} }) => {\n    const token = getCookie('token');\n\n    if (token) {\n      headers = { ...headers, 'x-token': token };\n    }\n\n    return { headers };\n  });\n\n  return forward(operation);\n});\n\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\n  if (graphQLErrors) {\n    graphQLErrors.forEach(({ message, locations, path }) => {\n      console.log('GraphQL error', message);\n\n      if (message === 'UNAUTHENTICATED') {\n        signOut(client);\n      }\n    });\n  }\n\n  if (networkError) {\n    console.log('Network error', networkError);\n\n    if (networkError.statusCode === 401) {\n      signOut(client);\n    }\n  }\n});\n\nconst link = ApolloLink.from([authLink, errorLink, terminatingLink]);\n\nconst cache = new InMemoryCache();\n\nconst client = new ApolloClient({\n  link,\n  cache,\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <CookiesProvider>\n      <App />\n    </CookiesProvider>\n  </ApolloProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}